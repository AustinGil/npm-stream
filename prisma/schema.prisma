// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  // url      = env("DATABASE_URL")
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id     String     @id 
  email  String     @unique
  password String
}

model Person {
  id      String      @id
  name    String
  pet     Pet[]

  @@map("pet_id")
}

// model Person_Pet {
//   personId    String
//   petId       String
//   person    Person  @relation(fields: [personId], references: [id])
//   pet       Pet  @relation(fields: [petId], references: [id])
// }

// Person_Pet
// -
// id PK string
// person_id string FK >- Person.id
// pet_id string FK >- Pet.id

model Pet {
  id      String      @id
  name    String
  type    String
  birthday DateTime   @default(now())
  owner   Person[]
  
  @@map("person_id")
}
// Pet
// -
// id      PK String
// name    String
// birthdate Datetime
// owner   Person


// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }